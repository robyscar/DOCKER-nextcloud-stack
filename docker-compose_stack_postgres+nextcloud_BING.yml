## Bing
# Here is an example of a docker-compose.yml file that you can use 
# to create a stack of containers based on Debian 11 to run Nextcloud server 
# on a Raspberry Pi 3b+ with 32-bit armhf architecture:

[yaml]
version: '3.7'
services:
  db:
    image: postgres:latest
    build:
      context: .
      dockerfile: Dockerfile-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_DB: nextcloud

  app:
    image: nextcloud:latest
    build:
      context: .
      dockerfile: Dockerfile-nextcloud
    restart: always
    ports:
      - 8080:80
    volumes:
      - nextcloud:/var/www/html
    environment:
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_DB: nextcloud
    depends_on:
      - db

volumes:
  nextcloud:

# You will also need to create two Dockerfiles, 
#    one for the PostgreSQL container (Dockerfile-postgres) and 
#     one for the Nextcloud container (Dockerfile-nextcloud).

# The Dockerfile-postgres should contain the following commands to download the 
# latest source code for PostgreSQL server and client and compile it:

[Dockerfile]
FROM debian:11

RUN apt-get update && apt-get install -y \
    build-essential \
    libreadline-dev \
    zlib1g-dev \
    wget

RUN wget https://ftp.postgresql.org/pub/source/v13.4/postgresql-13.4.tar.gz && \
    tar xf postgresql-13.4.tar.gz && \
    cd postgresql-13.4 && \
    ./configure && \
    make && \
    make install

# Remove source code and apt cache
RUN rm -rf /postgresql-13.4* && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

EXPOSE 5432

CMD ["/usr/local/pgsql/bin/postgres", "-D", "/usr/local/pgsql/data"]


# The Dockerfile-nextcloud should contain the following 
# commands to download the latest version of Nextcloud source code and compile it:

[Dockerfile]
FROM debian:11

RUN apt-get update && apt-get install -y \
    apache2 \
    libapache2-mod-php \
    php-gd \
    php-json \
    php-mysql \
    php-curl \
    php-mbstring \
    php-intl \
    php-imagick \
    php-xml \
    php-zip \
    wget

RUN wget https://download.nextcloud.com/server/releases/latest.zip && \
    unzip latest.zip && \
    mv nextcloud /var/www/html/

# Remove source code and apt cache
RUN rm -rf /latest.zip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

EXPOSE 80

CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]

# After creating these files, you can use the docker-compose up command to start the stack of containers.
 